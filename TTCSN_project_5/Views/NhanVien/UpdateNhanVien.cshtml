
@{
    ViewBag.Title = "UpdateNhanVien";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<button class="two"><a href="@Url.Action("QLNhanVien", "Home")"><i class="fa-solid fa-reply" style="color: darkblue;"></i></a></button>
<h2 class="title">Sửa nhân viên </h2>
<style>
    .two {
        color: black;
        padding: 0!important;
    }

    table, tr, th {
        border: none;
    }

    th {
        background-color: lightsteelblue;
        border-bottom: 2px white solid;
    }

    tr, th, td {
        padding: 10px;
    }

    td {
        padding: 0;
        padding-left: 30px;
        width: 80%;
    }

    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        font-size: 16px;
        width: 100%;
    }

    .title {
        text-align: center;
        margin-bottom: 40px;
        padding: 15px 0;
        text-transform: uppercase;
    }

    table {
        position: relative;
        width: 70%;
    }

    .one {
        color: black;
        font-size: 16px;
        font-weight: 800;
        text-decoration: none;
        border: 2px solid black;
        padding: 7px 10px;
        background-color: antiquewhite;
        position: relative;
        top: 0px;
        right: -95px;
    }

    .two {
        color: black;
        font-size: 16px;
        font-weight: 800;
        text-decoration: none;
        border: 2px solid black;
        padding: 7px 10px;
        background-color: antiquewhite;
        position: relative;
        text-align: center;
    }

        .two a {
            text-decoration: none;
            display: block;
            padding: 10px 15px;
        }

    .input_one {
        width: 192px;
        text-align: center;
    }

    input {
        border: none;
        width: calc(100% - 10px);
        outline: none;
        padding: 5px;
        border-bottom: 1px dotted rgba(128, 128, 128, 0.5);
        height: 100%;
    }

    .form__table {
        display: flex;
        width: 100%;
        justify-content: center;
    }

    .gender__name input {
        width: auto;
    }

    #GioiTinh {
        color: blue;
    }

    select {
        border: none;
        width: 100%;
        padding: 5px 0px;
        outline: none;
        border-bottom: 1px dotted rgba(128, 128, 128, 0.5);
        background-color: ghostwhite;
    }

        select:hover {
            cursor: pointer;
            background-color: aliceblue;
        }

    .ngaysinh input:hover {
        cursor: pointer;
    }

    .two, .one {
        border: none;
        padding: 10px;
        border-radius: 10px;
    }}
        .one:hover {
            cursor: pointer;
        }
    .form_meseage,
    .password_meseage,
    .account_meseage {
        color: red;
        font-family: 'Segoe UI';
        font-size: 16px;
        display: none;
        transition: 0.6s;
    }

    .form_group {
        width: 100%;
    }
</style>

@using (Html.BeginForm("SaveUpDateNhanVien", "NhanVien"))
{
    <div class="form__table">
        <table cellpadding="10">
            <tr>
                <th>@Html.Label("Mã nhân viên")</th>
                <td><input type="text" name="MaNhanVien" value="@Model.MaNhanVien" readonly style="background-color: lightgray; opacity: 0.5;" /></td>
            </tr>
            <tr>
                <th>@Html.Label("Tên tài khoản")</th>
                <td>
                    <input id="TaiKhoan" type="text" name="TaiKhoan" readonly style="background-color: lightgray; opacity: 0.5;" value="@Model.TaiKhoan" />
                </td>
            </tr>
            <tr>
                <th>@Html.Label("Mật khẩu")</th>
                <td>
                    <div class="form_group">
                        <input id="MatKhau" type="text" name="MatKhau" value="@Model.MatKhau" />
                        <span class="form_meseage">Mật khẩu không được để trống</span>
                        <span class="password_meseage">Mật khẩu tối thiểu 8 ký tự</span>
                    </div>
                </td>
            </tr>

            <tr>
                <th>@Html.Label("Tên nhân viên")</th>
                <td>
                    <div class="form_group">
                        <input id="HoTen" type="text" name="HoTen" value="@Model.HoTen" />
                        <span class="form_meseage">Họ tên không được để trống</span>
                    </div>
                </td>
            </tr>
            <tr>
                @{
                    string curentNgaySinh = String.Format("{0:yyyy-MM-dd}", @Model.NgaySinh);
                }
                <th>@Html.Label("Ngày sinh")</th>
                <td><input class="input_one" type="date" name="NgaySinh" id="NgaySinh" value="@curentNgaySinh" /></td>
            </tr>
            <tr>
                <th>@Html.Label("Quê Quán")</th>
                <td>
                    <div class="form_group">
                        <input id="QueQuan" type="text" name="QueQuan" value="@Model.QueQuan" />
                        <span class="form_meseage">Quê quán không được để trống</span>
                    </div>
                </td>
            </tr>
            <tr>
                <th>@Html.Label("Số điện thoại")</th>
                <td>
                    <div class="form_group">
                        <input id="sdt" type="text" name="sdt" value="@Model.sdt" />
                        <span class="form_meseage">Số điện thoại không được để trống</span>
                    </div>
                </td>
            </tr>
            <tr>
                <th>@Html.Label("Phòng Ban")</th>
                <td>
                    @{
                        List<string> listPhongBan = new List<string>();

                        for (int i = 0; i < ViewBag.lg; i++)
                        {
                            listPhongBan.Add(ViewBag.listpb[i].TenPhongBan);
                        }
                    }
                    @Html.DropDownList("Phongban", new SelectList(listPhongBan, listPhongBan.FirstOrDefault()))
                </td>
            </tr>
            <tr>
                <th>@Html.Label("Chức vụ")</th>
                <td>
                    @{
                        List<string> listChucVu = new List<string>();

                        for (int i = 0; i < ViewBag.lgcv; i++)
                        {
                            listChucVu.Add(ViewBag.listcv[i].TenChucVu);
                        }
                    }
                    @Html.DropDownList("ChucVu", new SelectList(listChucVu, listChucVu.FirstOrDefault()))
                </td>
            </tr>
            <tr>
                <td colspan="2" style="padding: 30px 0; text-align: center;">
                    <div style="display: flex; justify-content: center;">
                        <button class="one" type="submit" style=" transform: translateX(-100%); cursor: pointer;">Cập Nhật</button>
                    </div>
                </td>
            </tr>
        </table>
    </div>
}
<script>
    var buttonElement = document.querySelector(".one");
    var HoTenElement = document.getElementById("HoTen");
    var TaiKhoanElement = document.getElementById("TaiKhoan");
    var MatKhauElement = document.getElementById("MatKhau");
    var QueQuanElement = document.getElementById("QueQuan");
    var sdtElement = document.getElementById("sdt");
    var checkIsValueError = false;

    function checkPassword(element) {
        var valueCheck = element.value.trim();
        var parentElement = element.parentNode;
        if (valueCheck.length < 8) {
            parentElement.querySelector(".password_meseage").style.display = 'block';
            checkIsValueError = true;
            element.focus();
        }
        else {
            checkIsValueError = false;
            parentElement.querySelector(".password_meseage").style.display = 'none';
        }
    }
    function change(element) {
        var parentElement = element.parentNode;
        var formMesseageInGroup = parentElement.querySelector(".form_meseage");
        var valueCheck = element.value.trim();
        if (valueCheck == "") {
            checkIsValueError = true;
        }
        else {
            checkIsValueError = false;
            var arrayElement = [HoTenElement, TaiKhoanElement, MatKhauElement, QueQuanElement, sdtElement];
            arrayElement.forEach(function (element) {
                if (element.value.trim() == "") {
                    checkIsValueError = true;
                }
                else if (element == MatKhauElement) {
                    checkPassword(element);
                }
            });
        }
        if (valueCheck == "") {
            formMesseageInGroup.style.display = 'block';
        } else {
            formMesseageInGroup.style.display = 'none';
        }
        element.oninput = function () {
            formMesseageInGroup.style.display = 'none';
        }
        MatKhauElement.oninput = function () {
            MatKhauElement.parentNode.querySelector(".password_meseage").style.display = 'none';
        }
        TaiKhoanElement.oninput = function () {
            TaiKhoanElement.parentNode.querySelector(".account_meseage").style.display = 'none';
        }
        //console.log(checkIsValueError)
    }

    HoTenElement.addEventListener("blur", function () { change(HoTenElement) });
    MatKhauElement.addEventListener("blur", function () { change(MatKhauElement) });
    QueQuanElement.addEventListener("blur", function () { change(QueQuanElement) });
    sdtElement.addEventListener("blur", function () { change(sdtElement) });


    buttonElement.addEventListener('click', (event) => {
        //check từng trường nhập
        var arrayElement = [MatKhauElement, HoTenElement, QueQuanElement, sdtElement];
        arrayElement.forEach(function (element) {
            var parentElement = element.parentNode;
            var formMesseageInGroup = parentElement.querySelector(".form_meseage");
            if (element.value.trim() == "") {
                element.focus();
                formMesseageInGroup.style.display = 'block';
                checkIsValueError = true;
            }
            else {
                if (element == MatKhauElement) {
                    checkPassword(element);
                } else {
                    formMesseageInGroup.style.display = 'none';
                }
            }
        });
        console.log(checkIsValueError)

        if (checkIsValueError) { event.preventDefault(); }

    });
</script>


